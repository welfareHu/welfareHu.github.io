<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title><![CDATA[识别phone/PC]]></title>
    <url>%2F2019%2F01%2F20%2F%E8%AF%86%E5%88%ABphone-PC%2F</url>
    <content type="text"><![CDATA[如何让你的页面识别访问是来自手机还是电脑JavaScript代码如下：1234567891011try&#123; if (/Android|webOS|iPhone|iPod|BlackBerry/i.test(navigator.userAgent))&#123; window.location.href = "这里填写要跳转的手机网页地址" //地址可以是相对路径或绝对路径 &#125;else&#123; window.location.href = "这里填写要跳转的电脑网页地址" //地址可以是相对路径或绝对路径 &#125;&#125; catch(e)&#123;&#125; 代码放在index.html文件里，而且只放JavaScript代码。还没发现在哪些手机不能识别此代码，发现之后再补充]]></content>
  </entry>
  <entry>
    <title><![CDATA[JS日期格式化]]></title>
    <url>%2F2019%2F01%2F20%2FJS%E6%97%A5%E6%9C%9F%E6%A0%BC%E5%BC%8F%E5%8C%96%2F</url>
    <content type="text"><![CDATA[时间格式化处理dateFtt(“yyyy-MM-dd hh:mm:ss”,new Date() );12345678910111213141516171819/直接调用公共JS里面的时间类处理的办法function dateFtt(fmt,date) &#123; //author: welfareHu var o = &#123; "M+" : date.getMonth()+1, //月份 "d+" : date.getDate(), //日 "h+" : date.getHours(), //小时 "m+" : date.getMinutes(), //分 "s+" : date.getSeconds(), //秒 "q+" : Math.floor((date.getMonth()+3)/3), //季度 "S" : date.getMilliseconds() //毫秒 &#125;; if(/(y+)/.test(fmt)) fmt=fmt.replace(RegExp.$1, (date.getFullYear()+"").substr(4 - RegExp.$1.length)); for(var k in o) if(new RegExp("("+ k +")").test(fmt)) fmt = fmt.replace(RegExp.$1, (RegExp.$1.length==1) ? (o[k]) : (("00"+ o[k]).substr((""+ o[k]).length))); return fmt; &#125;]]></content>
      <categories>
        <category>JS</category>
      </categories>
      <tags>
        <tag>前端</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[限制input输入类型]]></title>
    <url>%2F2019%2F01%2F17%2F%E9%99%90%E5%88%B6input%E8%BE%93%E5%85%A5%E7%B1%BB%E5%9E%8B%2F</url>
    <content type="text"><![CDATA[限制input输入类型（多种方法实现）1.只能输入和粘贴汉字1&lt;input onkeyup="value=value.replace(/[^\u4E00-\u9FA5]/g,'')" onbeforepaste="clipboardData.setData('text',clipboardData.getData('text').replace(/[^\u4E00-\u9FA5]/g,''))"&gt;&lt;br/&gt; 2.只能输入和粘贴数字1&lt;input onkeyup="this.value=this.value.replace(/\D/g,'')" onafterpaste="this.value=this.value.replace(/\D/g,'')" /&gt;&lt;br/&gt; 3.数字脚本1&lt;input onkeyup="if(/\D/.test(this.value))&#123;alert('只能输入数字');this.value='';&#125;"&gt;&lt;br/&gt; 4.只能输入数字和英文1&lt;input onkeyup="value=value.replace(/[\W]/g,'') " onbeforepaste="clipboardData.setData('text',clipboardData.getData('text').replace(/[^\d]/g,''))"&gt;&lt;br/&gt; 5.简易禁止输入汉字1&lt;input style="ime-mode:disabled"&gt;输入法不转换，但可粘贴上&lt;br/&gt; 6.输入数字和小数点1&lt;input onkeyup="value=value.replace(/[^\d&#123;1,&#125;\.\d&#123;1,&#125;|\d&#123;1,&#125;]/g,'')" /&gt;&lt;br/&gt; 7.只能数字和”-“,例如在输入时间的时候可以用到1&lt;input onkeyup="value=value.replace(/[^\w&amp;=]|_/ig,'')" onblur="value=value.replace(/[^\w&amp;-]|_/ig,'')" /&gt; JS控制 input 输入字符限制ENTER键可以让光标移到下一个输入框代码如下: 1234&lt;input onkeydown="if(event.keyCode==13)event.keyCode=9" &gt; 只能是中文&lt;input onkeyup="value=value.replace(/[ -~]/g,'')" onkeydown="if(event.keyCode==13)event.keyCode=9"&gt; 屏蔽输入法 &lt;input style="ime-mode:disabled" onkeydown="if(event.keyCode==13)event.keyCode=9"&gt; 只能输入英文和数字&lt;input onkeyup="value=value.replace(/[/W]/g,'') "onbeforepaste="clipboardData.setData('text',clipboardData.getData('text').replace(/[^/d]/g,''))" onkeydown="if(event.keyCode==13)event.keyCode=9"&gt; 只能是数字&lt;input onkeyup="value=value.replace(/[^/d]/g,'') "onbeforepaste="clipboardData.setData('text',clipboardData.getData('text').replace(/[^/d]/g,''))"&gt; 只能显示，不能修改代码如下: 1234567&lt;input readonly value="只能显示，不能修改"&gt;只能输数字，判断按键的值&lt;script language=javascript&gt;function onlyNum()&#123;if(!((event.keyCode&gt;=48&amp;&amp;event.keyCode&lt;=57)||(event.keyCode&gt;=96&amp;&amp;event.keyCode&lt;=105)||(event.keyCode==8)))event.returnValue=false;&#125;&lt;/script&gt;&lt;input onkeydown="onlyNum();"&gt; 1.文本框只能输入数字代码(小数点也不能输入)1&lt;input onkeyup="this.value=this.value.replace(//D/g,'')" onafterpaste="this.value=this.value.replace(//D/g,'')"&gt; 2.只能输入数字,能输小数点.12&lt;input onkeyup="if(isNaN(value))execCommand('undo')" onafterpaste="if(isNaN(value))execCommand('undo')"&gt;&lt;input name=txt1 onchange="if(//D/.test(this.value))&#123;alert('只能输入数字');this.value='';&#125;"&gt; 3.数字和小数点方法二代码如下:1&lt;input type=text t_value="" o_value="" onkeypress="if(!this.value.match(/^[/+/-]?/d*?/.?/d*?$/))this.value=this.t_value;else this.t_value=this.value;if(this.value.match(/^(?:[/+/-]?/d+(?:/./d+)?)?$/))this.o_value=this.value" onkeyup="if(!this.value.match(/^[/+/-]?/d*?/.?/d*?$/))this.value=this.t_value;else this.t_value=this.value;if(this.value.match(/^(?:[/+/-]?/d+(?:/./d+)?)?$/))this.o_value=this.value" onblur="if(!this.value.match(/^(?:[/+/-]?/d+(?:/./d+)?|/./d*?)?$/))this.value=this.o_value;else&#123;if(this.value.match(/^/./d+$/))this.value=0+this.value;if(this.value.match(/^/.$/))this.value=0;this.o_value=this.value&#125;"&gt; 4.只能输入字母和汉字1&lt;input onkeyup="value=value.replace(/[/d]/g,'') "onbeforepaste="clipboardData.setData('text',clipboardData.getData('text').replace(/[/d]/g,''))" maxlength=10 name="Numbers"&gt; 5.只能输入英文字母和数字,不能输入中文12&lt;input onkeyup="value=value.replace(/[^/w/.//]/ig,'')"&gt;&lt;br&gt; 6.只能输入数字和英文12&lt;font color="Red"&gt;chun&lt;/font&gt;&lt;input onKeyUp="value=value.replace(/[^/d|chun]/g,'')"&gt; 7.小数点后只能有最多两位(数字,中文都可输入),不能输入字母和运算符号:1&lt;input onKeyPress="if((event.keyCode&lt;48 || event.keyCode&gt;57) &amp;&amp; event.keyCode!=46 || //./d/d$/.test(value))event.returnValue=false"&gt; 8.小数点后只能有最多两位(数字,字母,中文都可输入),可以输入运算符号:12&lt;input onkeyup="this.value=this.value.replace(/^(/-)*(/d+)/.(/d/d).*$/,'$1$2.$3')"&gt;只能是数字和小数点和加减乘際 9.只能输入数字、小数点、负数代码如下:123456789&lt;input name="input" type="text" onkeyup="JHshNumberText(this)" id="title"&gt;&lt;script language="javascript" type="text/javascript"&gt;function JHshNumberText(a)&#123;var fa="";if(a.value.substring(0,1)=="-")fa="-";var str=(a.value.replace(/[^0-9.]/g,'')).replace(/[.][0-9]*[.]/, '.');if (str.substring(0,1)==".")&#125; 限制input输入类型(多种方法实现)1.取消按钮按下时的虚线框,在input里添加属性值 hideFocus 或者 HideFocus=true1&lt;input type="submit" value="提交" hidefocus="true" /&gt; 2.只读文本框内容,在input里添加属性值 readonly123456&lt;input type="text" readonly /&gt;``` ### 3.防止退后清空的TEXT文档(可把style内容做做为类引用) ``` html&lt;input type="text" style="behavior:url(#default#savehistory);" /&gt; 4.ENTER键可以让光标移到下一个输入框1&lt;input type="text" onkeydown="if(event.keyCode==13)event.keyCode=9" /&gt; 5.只能为中文(有闪动)1&lt;input type="text" onkeyup="value=value.replace(/[ -~]/g,'')" onkeydown="if(event.keyCode==13)event.keyCode=9" /&gt; 6.只能为数字(有闪动)1&lt;input type="text" onkeyup="value=value.replace(/[^/d]/g,'') " onbeforepaste="clipboardData.setData('text',clipboardData.getData('text').replace(/[^/d]/g,''))" /&gt; 7.只能为数字(无闪动)1&lt;input type="text" style="ime-mode:disabled" onkeydown="if(event.keyCode==13)event.keyCode=9" onkeypress="if ((event.keyCode&lt;48 || event.keyCode&gt;57)) event.returnValue=false" /&gt; 8.只能输入英文和数字(有闪动)1&lt;input type="text" onkeyup="value=value.replace(/[/W]/g,'')" onbeforepaste="clipboardData.setData('text',clipboardData.getData('text').replace(/[^/d]/g,''))" /&gt; 9.屏蔽输入法1&lt;input type="text" name="url" style="ime-mode:disabled" onkeydown="if(event.keyCode==13)event.keyCode=9" /&gt; 10. 只能输入 数字，小数点，减号（-） 字符(无闪动)1&lt;input onkeypress="if (event.keyCode!=46 &amp;&amp; event.keyCode!=45 &amp;&amp; (event.keyCode&lt;48 || event.keyCode&gt;57)) event.returnValue=false" /&gt; 11. 只能输入两位小数，三位小数(有闪动)1&lt;input type="text" maxlength="9" onkeyup="if(value.match(/^/d&#123;3&#125;$/))value=value.replace(value,parseInt(value/10)) ;value=value.replace(//./d*/./g,'.')" onkeypress="if((event.keyCode&lt;48 || event.keyCode&gt;57) &amp;&amp; event.keyCode!=46 &amp;&amp; event.keyCode!=45 || value.match(/^/d&#123;3&#125;$/) || //./d&#123;3&#125;$/.test(value)) &#123;event.returnValue=false&#125;" /&gt;]]></content>
      <categories>
        <category>html</category>
      </categories>
      <tags>
        <tag>前端</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Java读写中文解决中文乱码问题]]></title>
    <url>%2F2019%2F01%2F16%2FJava%E8%AF%BB%E5%86%99%E4%B8%AD%E6%96%87%E8%A7%A3%E5%86%B3%E4%B8%AD%E6%96%87%E4%B9%B1%E7%A0%81%E9%97%AE%E9%A2%98%2F</url>
    <content type="text"><![CDATA[下面是关于Java读写中文文件解决中文乱码的问题分析，原因查找，解决思路，及解决方案。问题：在用Java程序进行读写含中文的txt文件时，经常会出现读出或写入的内容会出现乱码。 原因：其实很简单，就是系统的编码和程序的编码采用了不同的编码格式。通常，假如自己不修改的话，windows自身采用的编码格式是gbk(而gbk和gb2312基本上是一样的编码方式),而IDE中Encode不修改的话，默认是utf-8的编码，这就是为什么会出现乱码的原因。当在OS下手工创建并写入的txt文件（gbk），用程序直接去读（utf-8），就会乱码。为了避免可能的中文乱码问题，最好在文件写入和读出的时候显式指定编码格式。 分析可以观察其实windows下的记事本的默认的格式是ANSI,查看方式就是创建一个新的文本文件然后点击另存为，在简体中文Windows操作系统中，ANSI编码代表 GBK 编码，所以win系统的编码方式是gbk,不可以用utf-8去读。 解决思路在Java中，如果我们用java.io.FileReader或者java.io.FileWriter来读写文件的话，固然我们可以通过java.io.BufferedReader和java.io.BufferedWriter来提高效率，但是我们会发现在FileReader和FileWriter中我们只能获取编码方式，而不能设置。这样，在FileReader和FileWriter中的编码设置只能服从于一些更为底层的设置，那么在读写多种语言编码的文件时就很容易出现乱码。 解决方案另外一种方法就是采用java.io.FileInputStream/java.io.InputStreamReader和java.io.FileOutputStream/java.io.OutputStreamWriter来解决这个问题。在InputStreamReader和OutputStreamWriter中，可以通过指定编码方式来完成gbk文件的读写。 代码如下：12345678910111213141516171819202122232425262728293031323334353637//默认情况下，win系统编码是gbk/gbk2312,读取和写入时加入编码字符集可以解决乱码 public class ReadAndWrite &#123; private static void test()&#123; File firstFile = new File("D://fileone.txt"); File secondFile=new File("D://filesecond.txt"); BufferedReader in = null; BufferedWriter out = null; try &#123; //加入编码字符集 in = new BufferedReader(new InputStreamReader(new FileInputStream(firstFile), "gbk")); //加入编码字符集 out = new BufferedWriter(new OutputStreamWriter(new FileOutputStream(secondFile), "gbk")); String line = ""; while((line = in.readLine())!=null)&#123; System.out.println(line); out.write(line+"\r\n"); &#125; &#125; catch (FileNotFoundException e) &#123; System.out.println("file is not fond"); &#125; catch (IOException e) &#123; System.out.println("Read or write Exceptioned"); &#125;finally&#123; if(null!=in)&#123; try &#123; in.close(); &#125; catch (IOException e) &#123; e.printStackTrace(); &#125;&#125; if(null!=out)&#123; try &#123; out.close(); &#125; catch (IOException e) &#123; e.printStackTrace(); &#125; &#125; &#125; &#125; 文件读写的注意点：1.一定要写BufferedWriter out的close方法不然什么都不会被写入文件的！！！2.要写入换行时，一定要\r\n,否则无效]]></content>
      <categories>
        <category>Java基础</category>
      </categories>
      <tags>
        <tag>java</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Java空字符串与null的区别]]></title>
    <url>%2F2019%2F01%2F11%2FJava%E7%A9%BA%E5%AD%97%E7%AC%A6%E4%B8%B2%E4%B8%8Enull%E7%9A%84%E5%8C%BA%E5%88%AB%2F</url>
    <content type="text"><![CDATA[以下是java 判断字符串是否为空的四种方法:方法一: 最多人使用的一个方法, 直观, 方便, 但效率很低:if(s == null || s.equals(&quot;&quot;)); 方法二: 比较字符串长度, 效率高, 是我知道的最好一个方法:if(s == null || s.length() == 0); 方法三: Java SE 6.0 才开始提供的方法, 效率和方法二几乎相等, 但出于兼容性考虑, 推荐使用方法二.if(s == null || s.isEmpty()); 方法四: 这是一种比较直观,简便的方法,而且效率也非常的高,与方法二、三的效率差不多:if (s == null || s == &quot;&quot;); 注意:s == null 是有必要存在的. 如果 String 类型为null, 而去进行 equals(String) 或 length() 等操作会抛出java.lang.NullPointerException. 并且s==null 的顺序必须出现在前面，不然同样会抛出java.lang.NullPointerException. 如下Java代码: 1234String str = null; if(str.equals("") || str == null)&#123;//会抛出异常 System.out.println("success"); &#125; Java空字符串与null的区别： 1、类型null表示的是一个对象的值，而并不是一个字符串。例如声明一个对象的引用，String a = null ;“”表示的是一个空字符串，也就是说它的长度为0。例如声明一个字符串String str = “” ; 2、内存分配String str = null ; 表示声明一个字符串对象的引用，但指向为null，也就是说还没有指向任何的内存空间；String str = “”; 表示声明一个字符串类型的引用，其值为””空字符串，这个str引用指向的是空字符串的内存空间；在java中变量和引用变量是存在栈中（stack），而对象（new产生的）都是存放在堆中（heap）：就如下：String str = new String(“abc”) ;ps：=左边的是存放在栈中（stack），=右边是存放在堆中（heap）。3、示例程序： public class String_Demo01 { /** * @param args */ public static void main(String[] args) { String str1 = new String() ; String str2 = null ; String str3 = "" ; System.out.println(str1==str2); //内存地址的比较，返回false System.out.println(str1.equals(str2)); //值的比较，返回false System.out.println(str2==str3); //内存地址的比较，返回false System.out.println(str3.equals(str2)); //值的比较，返回false System.out.println(str1==str3); //内存地址的比较，返回false System.out.println(str1.equals(str3)); //值的比较，返回true } } 通过如上的程序可以得出如下结论：字符串对象与null的值不相等，且内存地址也不相等；空字符串对象与null的值不相等，且内存地址也不相等；new String()创建一个字符串对象的默认值为”” （String类型成员变量的初始值为null]]></content>
      <categories>
        <category>Java基础</category>
      </categories>
      <tags>
        <tag>Java</tag>
      </tags>
  </entry>
</search>
