<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title><![CDATA[Java空字符串与null的区别2]]></title>
    <url>%2F2019%2F01%2F11%2FJava%E7%A9%BA%E5%AD%97%E7%AC%A6%E4%B8%B2%E4%B8%8Enull%E7%9A%84%E5%8C%BA%E5%88%AB%2F</url>
    <content type="text"><![CDATA[以下是java 判断字符串是否为空的四种方法:方法一: 最多人使用的一个方法, 直观, 方便, 但效率很低:if(s == null || s.equals(&quot;&quot;)); 方法二: 比较字符串长度, 效率高, 是我知道的最好一个方法:if(s == null || s.length() == 0); 方法三: Java SE 6.0 才开始提供的方法, 效率和方法二几乎相等, 但出于兼容性考虑, 推荐使用方法二.if(s == null || s.isEmpty()); 方法四: 这是一种比较直观,简便的方法,而且效率也非常的高,与方法二、三的效率差不多:if (s == null || s == &quot;&quot;); 注意:s == null 是有必要存在的. 如果 String 类型为null, 而去进行 equals(String) 或 length() 等操作会抛出java.lang.NullPointerException. 并且s==null 的顺序必须出现在前面，不然同样会抛出java.lang.NullPointerException. 如下Java代码: 1234String str = null; if(str.equals("") || str == null)&#123;//会抛出异常 System.out.println("success"); &#125; Java空字符串与null的区别： 1、类型null表示的是一个对象的值，而并不是一个字符串。例如声明一个对象的引用，String a = null ;“”表示的是一个空字符串，也就是说它的长度为0。例如声明一个字符串String str = “” ; 2、内存分配String str = null ; 表示声明一个字符串对象的引用，但指向为null，也就是说还没有指向任何的内存空间；String str = “”; 表示声明一个字符串类型的引用，其值为””空字符串，这个str引用指向的是空字符串的内存空间；在java中变量和引用变量是存在栈中（stack），而对象（new产生的）都是存放在堆中（heap）：就如下：String str = new String(“abc”) ;ps：=左边的是存放在栈中（stack），=右边是存放在堆中（heap）。3、示例程序： public class String_Demo01 { /** * @param args */ public static void main(String[] args) { String str1 = new String() ; String str2 = null ; String str3 = "" ; System.out.println(str1==str2); //内存地址的比较，返回false System.out.println(str1.equals(str2)); //值的比较，返回false System.out.println(str2==str3); //内存地址的比较，返回false System.out.println(str3.equals(str2)); //值的比较，返回false System.out.println(str1==str3); //内存地址的比较，返回false System.out.println(str1.equals(str3)); //值的比较，返回true } } 通过如上的程序可以得出如下结论：字符串对象与null的值不相等，且内存地址也不相等；空字符串对象与null的值不相等，且内存地址也不相等；new String()创建一个字符串对象的默认值为”” （String类型成员变量的初始值为null]]></content>
      <categories>
        <category>Java基础</category>
      </categories>
      <tags>
        <tag>Java</tag>
      </tags>
  </entry>
</search>
